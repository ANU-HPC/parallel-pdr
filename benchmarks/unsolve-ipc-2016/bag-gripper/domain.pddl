(define (domain gripper-typed)
(:requirements :typing)
(:types room ball gripper ball-property1 bnum gripper-property1 gnum  - object )
(:predicates   (at-robby ?r - room)
  (ball-less ?l - bnum ?m - bnum)
  (count-ball ?ball - ball ?ball-property1 - object ?bnum - bnum)
  (gripper-less ?l - gnum ?m - gnum)
  (count-gripper ?gripper - gripper ?gripper-property1 - object ?gnum - gnum)
  (ball-lte-sum ?sum1 - bnum ?sum2 - bnum ?lte - bnum)
  (ball-bag-size ?bag - ball ?size - bnum)
  (gripper-lte-sum ?sum1 - gnum ?sum2 - gnum ?lte - gnum)
  (gripper-bag-size ?bag - gripper ?size - gnum)
)
(:constants free-true - gripper-property1)
(:action move
	:parameters (?from - room ?to - room)
	:precondition (at-robby ?from)
	:effect (and
	  (at-robby ?to)
	  (not (at-robby ?from))
))
(:action pick
	:parameters (?obj - ball ?room - room ?gripper - gripper ?n1 - bnum ?n0 - bnum ?n2 - bnum ?n3 - bnum ?n4 - gnum ?n5 - gnum ?n6 - gnum ?n7 - gnum ?obj-size - bnum ?gripper-size - gnum)
	:precondition (and
	  (count-ball ?obj ?room ?n1)
	  (ball-less ?n0 ?n1)
	  (count-ball ?obj ?gripper ?n2)
	  (ball-less ?n2 ?n3)
	  (count-gripper ?gripper free-true ?n4)
	  (gripper-less ?n5 ?n4)
	  (count-gripper ?gripper ?obj ?n6)
	  (gripper-less ?n6 ?n7)
	  (at-robby ?room)
	  (ball-lte-sum ?n1 ?n2 ?obj-size)
	  (ball-bag-size ?obj ?obj-size)
	  (gripper-lte-sum ?n4 ?n6 ?gripper-size)
	  (gripper-bag-size ?gripper ?gripper-size))

	:effect (and
	  (count-ball ?obj ?room ?n0)
	  (not (count-ball ?obj ?room ?n1))
	  (count-ball ?obj ?gripper ?n3)
	  (not (count-ball ?obj ?gripper ?n2))
	  (count-gripper ?gripper free-true ?n5)
	  (not (count-gripper ?gripper free-true ?n4))
	  (count-gripper ?gripper ?obj ?n7)
	  (not (count-gripper ?gripper ?obj ?n6))
))
(:action drop
	:parameters (?obj - ball ?room - room ?gripper - gripper ?n1 - bnum ?n0 - bnum ?n2 - bnum ?n3 - bnum ?n4 - gnum ?n5 - gnum ?n6 - gnum ?n7 - gnum ?obj-size - bnum ?gripper-size - gnum)
	:precondition (and
	  (count-ball ?obj ?gripper ?n1)
	  (ball-less ?n0 ?n1)
	  (count-ball ?obj ?room ?n2)
	  (ball-less ?n2 ?n3)
	  (count-gripper ?gripper ?obj ?n4)
	  (gripper-less ?n5 ?n4)
	  (count-gripper ?gripper free-true ?n6)
	  (gripper-less ?n6 ?n7)
	  (at-robby ?room)
	  (ball-lte-sum ?n1 ?n2 ?obj-size)
	  (ball-bag-size ?obj ?obj-size)
	  (gripper-lte-sum ?n4 ?n6 ?gripper-size)
	  (gripper-bag-size ?gripper ?gripper-size))

	:effect (and
	  (count-ball ?obj ?gripper ?n0)
	  (not (count-ball ?obj ?gripper ?n1))
	  (count-ball ?obj ?room ?n3)
	  (not (count-ball ?obj ?room ?n2))
	  (count-gripper ?gripper ?obj ?n5)
	  (not (count-gripper ?gripper ?obj ?n4))
	  (count-gripper ?gripper free-true ?n7)
	  (not (count-gripper ?gripper free-true ?n6))
))
)

